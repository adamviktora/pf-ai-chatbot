{"about modal": {"name": "About modal", "link": "http://localhost:8003/components/about-modal", "description": "An about modal displays information about an application like product version number(s), as well as any appropriate legal text."}, "accordion": {"name": "Accordion", "link": "http://localhost:8003/components/accordion", "description": "An accordion is an interactive container that expands and collapses to hide or reveal nested content. It takes advantage of progressive disclosure to help reduce page scrolling, by allowing users to choose whether they want to show or hide more detailed information as needed."}, "action list": {"name": "Action list", "link": "http://localhost:8003/components/action-list", "description": "An action list is a group of actions, controls, or buttons with set spacing."}, "alert": {"name": "Alert", "link": "http://localhost:8003/components/alert", "description": "An alert is a notification that provides brief information to the user without blocking their workflow."}, "avatar": {"name": "Avatar", "link": "http://localhost:8003/components/avatar", "description": "An avatar is a visual used to represent a user. It may contain an image or a placeholder graphic."}, "back to top": {"name": "Back to top", "link": "http://localhost:8003/components/back-to-top", "description": "The back to top component is a shortcut that allows users to quickly navigate to the top of a lengthy content page."}, "backdrop": {"name": "Backdrop", "link": "http://localhost:8003/components/backdrop", "description": "A backdrop is used to screen the main content of a page when a modal overlay is opened. It prevents the user from doing other work on the page until the modal is dismissed."}, "background image": {"name": "Background image", "link": "http://localhost:8003/components/background-image", "description": "A background image allows you to place an image in the background of your page or area of a page."}, "badge": {"name": "Badge", "link": "http://localhost:8003/components/badge", "description": "A badge is used to annotate other information like a label or an object name."}, "banner": {"name": "Banner", "link": "http://localhost:8003/components/banner", "description": "A banner is a 1-line, full color, full width container that can be used to communicate short snippets of information to users. Banners are un-intrusive and non-dismissible."}, "brand": {"name": "Brand", "link": "http://localhost:8003/components/brand", "description": "A brand is used to place a product logotype on a screen."}, "breadcrumb": {"name": "Breadcrumb", "link": "http://localhost:8003/components/breadcrumb", "description": "A breadcrumb provides page context to help users navigate more efficiently and understand where they are in the application hierarchy."}, "button": {"name": "Button", "link": "http://localhost:8003/components/button", "description": "A button is a box area or text that communicates and triggers user actions when clicked or selected. Buttons can be used to communicate and immediately trigger actions a user can take in an application, like submitting a form, canceling a process, or creating a new object. Buttons can also be used to take a user to a new location, like another page inside of a web application, or an external site such as help or documentation."}, "card": {"name": "Card", "link": "http://localhost:8003/components/card", "description": "A card is a square or rectangular container that can contain any kind of content. Cards symbolize units of information, and each one acts as an entry point for users to access more details. For example, in dashboards and catalog views, cards function as a preview of a detailed page. Cards may also be used in data displays like card views, or for positioning content on a page."}, "clipboard copy": {"name": "Clipboard copy", "link": "http://localhost:8003/components/clipboard-copy", "description": "The clipboard copy component allows users to quickly and easily copy content to their clipboard."}, "code block": {"name": "Code block", "link": "http://localhost:8003/components/code-block", "description": "A code block is a component that contains 2 or more lines of read-only code. The code in a code block can be copied to the clipboard."}, "code editor": {"name": "Code editor", "link": "http://localhost:8003/components/code-editor", "description": "A code editor is a versatile text editor that allows for editing various languages. The code editor is built on top of the Monaco Editor."}, "data list": {"name": "Data list", "link": "http://localhost:8003/components/data-list", "description": "A data list is used to display large data sets when you need a flexible layout or need to include interactive content like charts."}, "calendar month": {"name": "Calendar month", "link": "http://localhost:8003/components/date-and-time/calendar-month", "description": "A calendar month component allows users to select and navigate between days, months and/or years. This component is usually used with the date picker component, to display date options and selections. For more information about usage, view date picker guidelines."}, "date and time picker": {"name": "Date and time picker", "link": "http://localhost:8003/components/date-and-time/date-and-time-picker", "description": "A date and time picker helps users select both a specific date and a time by combining date picker and time picker components."}, "date picker": {"name": "Date picker", "link": "http://localhost:8003/components/date-and-time/date-picker", "description": "A date picker helps users enter or select a specific date from a calendar."}, "time picker": {"name": "Time picker", "link": "http://localhost:8003/components/date-and-time/time-picker", "description": "A time picker allows users to select a time from a list of options. Time can be displayed in hours and minutes, but not in seconds."}, "description list": {"name": "Description list", "link": "http://localhost:8003/components/description-list", "description": "A description list contains terms and their corresponding descriptions."}, "divider": {"name": "Divider", "link": "http://localhost:8003/components/divider", "description": "A divider is a horizontal or vertical line that is placed between screen elements to create visual divisions and content groupings."}, "drag and drop": {"name": "Drag and drop", "link": "http://localhost:8003/components/drag-and-drop", "description": "The drag and drop interaction can be used to reposition elements on screen into a layout that benefits the user. This gives the user more flexibility to arrange and/or group items without having to make code changes."}, "drawer": {"name": "Drawer", "link": "http://localhost:8003/components/drawer", "description": "A drawer is a sliding panel that enters from the right edge of the viewport. It can be configured to either overlay content on a page or create a sidebar by pushing that content to the left."}, "dual list selector": {"name": "Dual list selector", "link": "http://localhost:8003/components/dual-list-selector", "description": "A dual list selector allows users to select and move items from one list of available items to another list of selected items. Unlike a select list, a dual list selector separates the available options and the selected options into two separate lists, which allows users to easily scan the items they selected."}, "empty state": {"name": "Empty state", "link": "http://localhost:8003/components/empty-state", "description": "An empty state is a screen that is not yet populated with data or information. Empty states typically contain a short message and next steps for the user."}, "expandable section": {"name": "Expandable section", "link": "http://localhost:8003/components/expandable-section", "description": "An expandable section component is used to support progressive disclosure in a form or page by hiding additional content when you don't want it to be shown by default. An expandable section can contain any type of content such as plain text, form inputs, and charts."}, "multiple file upload": {"name": "Multiple file upload", "link": "http://localhost:8003/components/file-upload/multiple-file-upload", "description": "A multiple file upload component allows users to select 1 or more files to upload to a specific location. The component can be configured to support any file type as well as restrict the user's ability to upload 1 or more files. Users have the ability to select files from their system either natively using a file input or via drag and drop. Once uploaded, the user can edit any files."}, "simple file upload": {"name": "Simple file upload", "link": "http://localhost:8003/components/file-upload/simple-file-upload", "description": "A simple file upload component allows the users to upload a single file into the browser. This is primarily used for uploading and previewing text files, but other file types will also be accepted."}, "form": {"name": "Form", "link": "http://localhost:8003/components/forms/form", "description": "A form is a group of elements used to collect information from a user in a variety of contexts including in a modal, in a wizard, or on a page. Use cases for forms include tasks reliant on user-inputted information for completion like logging in, registering, configuring settings, or completing surveys."}, "form control": {"name": "Form control", "link": "http://localhost:8003/components/forms/form-control", "description": "Form controls refer to the different visual states that data input components can take to help guide users in completing forms."}, "form select": {"name": "Form select", "link": "http://localhost:8003/components/forms/form-select", "description": "A form select embeds browser native select lists into a form."}, "checkbox": {"name": "Checkbox", "link": "http://localhost:8003/components/forms/checkbox", "description": "A checkbox is used to select a single item or multiple items, typically to choose elements to perform an action or to reflect a binary setting."}, "radio": {"name": "Radio", "link": "http://localhost:8003/components/forms/radio", "description": "A radio button is used to present the user with mutually exclusive choices. Always present radio buttons in groups of 2 or more."}, "text area": {"name": "Text area", "link": "http://localhost:8003/components/forms/text-area", "description": "A text area component is used for entering a paragraph of text that is longer than one line."}, "text input": {"name": "Text input", "link": "http://localhost:8003/components/forms/text-input", "description": "A text input is used to gather free-form text from a user."}, "helper text": {"name": "Helper text", "link": "http://localhost:8003/components/helper-text", "description": "Helper text is an on-screen field guideline that helps provide context regarding field inputs."}, "hint": {"name": "Hint", "link": "http://localhost:8003/components/hint", "description": "A hint is in-app messaging that provides a one-step reminder, explanation, or call to action for a page or modal."}, "chip": {"name": "Chip", "link": "http://localhost:8003/components/chip", "description": "A chip is used to communicate a value or a set of attribute-value pairs within workflows that involve filtering a set of objects."}, "icon": {"name": "Icon", "link": "http://localhost:8003/components/icon", "description": "An icon component is a container that allows for icons of varying dimensions, as well as spinners, to seamlessly replace each other without shifting surrounding content.\n\nPatternFly's icons guidelines contain PatternFly's icon set, as well as more information about icon usage."}, "inline edit": {"name": "Inline edit", "link": "http://localhost:8003/components/inline-edit", "description": "An inline edit component allows users to switch between a read-only view and an edit view of description lists, page text elements, or tables as needed. Inline editing saves the user from opening a modal window or redirecting to a separate edit page so that they can edit in context of their current view."}, "input group": {"name": "Input group", "link": "http://localhost:8003/components/input-group", "description": "An input group groups multiple related controls or inputs together so they appear as one control."}, "jump links": {"name": "Jump links", "link": "http://localhost:8003/components/jump-links", "description": "Jump links allow users to navigate to sections within a page."}, "label": {"name": "Label", "link": "http://localhost:8003/components/label", "description": "The label component allows users to add specific element captions for user clarity and convenience."}, "list": {"name": "List", "link": "http://localhost:8003/components/list", "description": "A list component embeds a formatted list (bulleted or numbered list) into page content."}, "login page": {"name": "Login page", "link": "http://localhost:8003/components/login-page", "description": "A login page allows a user to gain access to an application by entering their username and password or by authenticating using a social media login."}, "masthead": {"name": "Masthead", "link": "http://localhost:8003/components/masthead", "description": "A masthead contains global properties such as logotype, navigation and settings in an organized fashion and it is accessible from all parts of the application. All pages should share a common masthead."}, "application launcher": {"name": "Application launcher", "link": "http://localhost:8003/components/menus/application-launcher", "description": "An application launcher is an option menu that allows a user to launch a separate web application in a new browser window."}, "context selector": {"name": "Context selector", "link": "http://localhost:8003/components/menus/context-selector", "description": "A context selector can be used in addition to global navigation when the data or resources you show in the interface need to change depending on the user's context."}, "custom menus": {"name": "Custom menus", "link": "http://localhost:8003/components/menus/custom-menus", "description": "Custom menus can be created by combining menu and menu toggles to satisfy a variety of use cases."}, "dropdown": {"name": "Dropdown", "link": "http://localhost:8003/components/menus/dropdown", "description": "A dropdown presents a menu of actions or links in a constrained space that will trigger a process or navigate to a new location. See select component guidelines for more information about making one or more selections from a list of items in a value list.\n\nA newer React implementation of the dropdown has replaced the deprecated implementation. The documentation for the deprecated implementation is under the React deprecated tab, and this deprecated implementation can be imported from @patternfly/react-core/deprecated."}, "menu": {"name": "Menu", "link": "http://localhost:8003/components/menus/menu", "description": "A menu is a list of options or actions that users can choose from. It can be used in a variety of contexts whenever the user needs to choose between multiple values, options, or actions. A menu is most often paired with a menu toggle as its trigger, but can also be used inline or can be attached to other interactable elements to toggle it open and close."}, "menu toggle": {"name": "Menu toggle", "link": "http://localhost:8003/components/menus/menu-toggle", "description": "The menu toggle component pairs with the menu OR the panel component to create more customizable dropdown and select implementations. Using a menu toggle with a menu enables you to create custom component configurations not supported by the standard dropdown or select components."}, "options menu": {"name": "Options menu", "link": "http://localhost:8003/components/menus/options-menu", "description": "An options menu is similar to a dropdown, but provides a way to select among a set of optional settings rather than trigger an action."}, "select": {"name": "Select", "link": "http://localhost:8003/components/menus/select", "description": "A select list enables users to select one or more items from a list. Use a select list when options are dynamic or variable.\n\nA newer React implementation of the select will replace the existing implementation at the next major release. The documentation for the newer implementation is under the React next tab, and this newer implementation can be imported from @patternfly/react-core/next."}, "modal": {"name": "Modal", "link": "http://localhost:8003/components/modal", "description": "A modal displays important information to a user without requiring them to navigate to a new page."}, "navigation": {"name": "Navigation", "link": "http://localhost:8003/components/navigation", "description": "A navigation organizes an application's structure and content, making it easy to find information and accomplish tasks. Navigation communicates relationships, context, and actions a user can take within an application."}, "notification badge": {"name": "Notification badge", "link": "http://localhost:8003/components/notification-badge", "description": "A notification badge is intended to be used with a notification drawer as a visible indicator to alert the user about incoming notifications."}, "notification drawer": {"name": "Notification drawer", "link": "http://localhost:8003/components/notification-drawer", "description": "A notification drawer is a place where users can view and manage notifications that are generated by the system. It allows them to see a list of notifications without the need to navigate away from the current screen."}, "number input": {"name": "Number input", "link": "http://localhost:8003/components/number-input", "description": "A number input provides a quick and effective way for users to enter and modify a numeric value. Similar to input groups, number inputs combine 2 input types into 1 control: A text input field with buttons on either side. When combined, these elements allow users to input numeric values in a responsive and scalable way."}, "overflow menu": {"name": "Overflow menu", "link": "http://localhost:8003/components/overflow-menu", "description": "An overflow menu groups a set of actions in a responsive horizontal list to help declutter an interface. Actions can be set to persist or collapse into a kebab as the viewpoint shrinks. Overflow menus are useful in toolbars or other places where a group of actions is required."}, "page": {"name": "Page", "link": "http://localhost:8003/components/page", "description": "The page component is used to define the basic layout of a page with either vertical or horizontal navigation."}, "pagination": {"name": "Pagination", "link": "http://localhost:8003/components/pagination", "description": "A pagination component gives users more navigational capability on pages with content views."}, "panel": {"name": "Panel", "link": "http://localhost:8003/components/panel", "description": "The panel component is a container that supports flexible content layouts. It can be used to house other components such as fields, forms, videos, buttons, and more. The panel should not be confused with the drawer component, which allows you to surface information via a collapsable container."}, "password generator": {"name": "Password generator", "link": "http://localhost:8003/components/password-generator", "description": "This demo shows you how to create an input field that can be used to generate unique passwords."}, "password strength": {"name": "Password strength", "link": "http://localhost:8003/components/password-strength", "description": "This demo shows how to use PatternFly component to validate and return feedback about password strength according to consumer-defined rules."}, "popover": {"name": "Popover", "link": "http://localhost:8003/components/popover", "description": "A popover is in-app messaging that provides more information on specific product areas. Popovers display content in a new window that overlays the current page. Unlike modals, popovers don't block the current page."}, "progress": {"name": "Progress", "link": "http://localhost:8003/components/progress", "description": "A progress bar informs users about the completion status of an ongoing process or task."}, "progress stepper": {"name": "Progress stepper", "link": "http://localhost:8003/components/progress-stepper", "description": "A progress stepper displays a timeline of tasks in a workflow and tracks the user's current progress through this workflow."}, "search input": {"name": "Search input", "link": "http://localhost:8003/components/search-input", "description": "A search input is a type of input field that can be user to search, find, or filter. See filter guidelines for more information on using search input as a filter."}, "sidebar": {"name": "Sidebar", "link": "http://localhost:8003/components/sidebar", "description": "A sidebar splits content into a secondary area that can be placed relative to the main content on a page."}, "simple list": {"name": "Simple list", "link": "http://localhost:8003/components/simple-list", "description": "A simple list provides a list of selectable items that can be shown within a page. Each item is described by a text label. The list may be divided into logical sections by introducing group headers."}, "skeleton": {"name": "Skeleton", "link": "http://localhost:8003/components/skeleton", "description": "A skeleton is a type of loading state that allows you to expose content incrementally. For content that may take a long time to load, use a progress bar in place of a skeleton."}, "skip to content": {"name": "Skip to content", "link": "http://localhost:8003/components/skip-to-content", "description": "A skip to content component allows screen reader and keyboard users to bypass navigation rather than tabbing through it."}, "slider": {"name": "Slider", "link": "http://localhost:8003/components/slider", "description": "A slider provides a quick and effective way for users to set and adjust a numeric value from a defined range of values."}, "spinner": {"name": "Spinner", "link": "http://localhost:8003/components/spinner", "description": "A spinner is used to indicate to users that an action is in progress. For actions that may take a long time, use a progress bar instead."}, "switch": {"name": "Switch", "link": "http://localhost:8003/components/switch", "description": "A switch toggles the state of a setting (between on and off). Switches and checkboxes can often be used interchangeably, but the switch provides a more explicit, visible representation on a setting."}, "tab content": {"name": "Tab content", "link": "http://localhost:8003/components/tab-content", "description": "A tab content component should be used with the tabs component."}, "table": {"name": "Table", "link": "http://localhost:8003/components/table", "description": "A table is used to display large data sets that can be easily laid out in a simple grid with column headers."}, "tabs": {"name": "Tabs", "link": "http://localhost:8003/components/tabs", "description": "Tabs allow users to navigate between views within the same page or context."}, "text": {"name": "Text", "link": "http://localhost:8003/components/text", "description": "Text and TextList components are always wrapped in TextContent and provide correct formatting to a number of standard HTML tags."}, "text input group": {"name": "Text input group", "link": "http://localhost:8003/components/text-input-group", "description": "A text input group is a more flexible composable version of a text input. It enables consumers of PatternFly to build custom inputs for filtering and similar use cases by placing elements like icons, chips groups and buttons within a text input."}, "tile": {"name": "Tile", "link": "http://localhost:8003/components/tile", "description": "A tile component is a form of selection that can be used in place of a radio button and is commonly used in forms. A tile appears visually similar to a selectable card. However, tiles are used specifically when the user is selecting a static option, whereas a selectable card triggers an action or opens a quickstart or sidebar to provide additional information."}, "timestamp": {"name": "Timestamp", "link": "http://localhost:8003/components/timestamp", "description": "A timestamp provides consistent formats for displaying date and time values."}, "title": {"name": "Title", "link": "http://localhost:8003/components/title", "description": "A title component applies top and bottom margins, font-weight, font-size, and line-height to titles. The most common usage for a title is to define headings within a page. For more information about the relationship between title component sizes and HTML heading levels, see the Typography guidelines."}, "toggle group": {"name": "Toggle group", "link": "http://localhost:8003/components/toggle-group", "description": "A toggle group is a group of controls that can be used to quickly switch between actions or states."}, "toolbar": {"name": "Toolbar", "link": "http://localhost:8003/components/toolbar", "description": "A toolbar allows a user to manage and manipulate a data set. Data can be presented in any valid presentation, a table, a list, or a data visualization (chart), for example. The toolbar responsively accommodates controls and displays applied filters in chip groups."}, "tooltip": {"name": "Tooltip", "link": "http://localhost:8003/components/tooltip", "description": "A tooltip is in-app messaging used to identify elements on a page with short, clarifying text."}, "tree view": {"name": "Tree view", "link": "http://localhost:8003/components/tree-view", "description": "A tree view is a structure that displays data in a hierarchical view. It can be used in a dropdown, drawer, primary-detail, modal, or wizard."}, "truncate": {"name": "Truncate", "link": "http://localhost:8003/components/truncate", "description": "A truncate is a tool used to shorten numeric and non-numeric character strings, typically when the string overflows its container."}, "wizard": {"name": "Wizard", "link": "http://localhost:8003/components/wizard", "description": "A wizard provides a guided workflow that offers a path to complete a task, create an object or objects, or finish a series of steps for some other outcome. Wizards should incite trust in the user and guide them through an otherwise overwhelming experience.\n\nA newer React implementation of the wizard has replaced the now deprecated implementation. The documentation for the deprecated implementation is under the React deprecated tab, and this deprecated implementation can be imported from @patternfly/react-core/deprecated."}}